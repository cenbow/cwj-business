#公共配置
server:
  tomcat:
    uri-encoding: UTF-8
  #端口号
  port: 80
  
jasypt:
  encryptor:
    password: e!Jd&ljyJ^e4I5oU
spring:
  #激活哪一个环境的配置文件
  profiles:
    active: pro
 #数据源
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j,config
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=50;config.decrypt=true;config.decrypt.key=${publicKey}
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
  http:
    multipart:
      #开启文件上传
      enabled: true
      file-size-threshold: 0
      #懒加载
      resolve-lazily: true
      #单个文件的大小限制
      max-file-size: 1MB
      #整个请求文件的大小限制
      max-request-size: 10MB
    encoding: 
      force: true
      charset: UTF-8
      enabled: true
  devtools:
    restart:
      #热部署生效
      enabled: true
      #设置重启的目录
      additional-paths: src/main/java
      #classpath目录下的WEB-INF文件夹内容修改不重启
      exclude: WEB-INF/**
